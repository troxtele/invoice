{"version":3,"file":"static/js/605.77784e9b.chunk.js","mappings":"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","sources":["views/invoice-list/actionRenderer.jsx","views/invoice-list/invoice-list.jsx"],"sourcesContent":["import { ReactComponent as IconDownload } from \"bootstrap-icons/icons/download.svg\";\r\nimport { ReactComponent as IconFileTupePdf } from \"bootstrap-icons/icons/filetype-pdf.svg\";\r\nimport { ReactComponent as IconPrinter } from \"bootstrap-icons/icons/printer.svg\";\r\nimport { ReactComponent as IconTrash } from \"bootstrap-icons/icons/trash.svg\";\r\n\r\nconst ActionRenderer = (params) => {\r\n  const invokeParentMethod = () => {\r\n    params.context.componentParent(params, \"edit\");\r\n  };\r\n\r\n  const invokeParentMethodDownloadPDF = () => {\r\n    params.context.componentParent(params, \"downloadPDF\");\r\n  };\r\n\r\n  const invokeParentMethodOpenPDF = () => {\r\n    params.context.componentParent(params, \"openPDF\");\r\n  };\r\n\r\n  const invokeParentMethodPrintPDF = () => {\r\n    params.context.componentParent(params, \"printPDF\");\r\n  };\r\n\r\n  const invokeParentMethodDeleteInvoice = () => {\r\n    params.context.componentParent(params, \"deleteInvoice\");\r\n  };\r\n  return (\r\n    <span>\r\n      <button onClick={invokeParentMethod} className=\"btn btn-sm btn-outline-info me-2\">\r\n        Open\r\n      </button>\r\n      <button\r\n        onClick={invokeParentMethodDownloadPDF}\r\n        className=\"btn btn-sm btn-outline-primary me-2\"\r\n        title=\"Download PDF\"\r\n      >\r\n        <IconDownload />\r\n      </button>\r\n      <button\r\n        onClick={invokeParentMethodOpenPDF}\r\n        className=\"btn btn-sm btn-outline-primary me-2\"\r\n        title=\"Open PDF\"\r\n      >\r\n        <IconFileTupePdf />\r\n      </button>\r\n      <button\r\n        onClick={invokeParentMethodPrintPDF}\r\n        className=\"btn btn-sm btn-outline-primary me-2\"\r\n        title=\"Print PDF\"\r\n      >\r\n        <IconPrinter />\r\n      </button>\r\n      <button\r\n        onClick={invokeParentMethodDeleteInvoice}\r\n        className=\"btn btn-sm btn-outline-danger\"\r\n        title=\"Delete Invoice\"\r\n      >\r\n        <IconTrash />\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ActionRenderer;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\r\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\r\nimport ActionRenderer from \"./actionRenderer.jsx\";\r\nimport pdfExport from \"../../common/pdfExport\";\r\n\r\nconst InvoiceList = () => {\r\n  const history = useNavigate();\r\n\r\n  const [rowData, setRowData] = useState(\r\n    localStorage.getItem(\"invoices\")\r\n      ? JSON.parse(localStorage.getItem(\"invoices\"))\r\n      : []\r\n  );\r\n  useEffect(() => {\r\n    localStorage.setItem(\"invoices\", JSON.stringify(rowData));\r\n  }, [rowData]);\r\n\r\n  const methodFromParent = (props, action) => {\r\n    if (action === \"edit\") {\r\n      history(\"/\", { replace: false, state: { uuid: props.data.uuid } });\r\n    } else {\r\n      const item = rowData.find((s, i) => s.uuid === props.data.uuid);\r\n      if (action === \"downloadPDF\") {\r\n        pdfExport.downloadInvoice(item);\r\n      } else if (action === \"openPDF\") {\r\n        pdfExport.openInvoice(item);\r\n      } else if (action === \"printPDF\") {\r\n        pdfExport.printInvoice(item);\r\n      } else if (action === \"deleteInvoice\") {\r\n        if (window.confirm(\"Are you sure you wish to delete this invoice?\")) {\r\n          setRowData((item) =>\r\n            item.filter((s, i) => {\r\n              return s.uuid !== props.data.uuid;\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  let state = {\r\n    context: { componentParent: methodFromParent },\r\n    defaultColDef: {\r\n      flex: 1,\r\n      sortable: true,\r\n      filter: true,\r\n      resizable: true,\r\n      //filter: \"agTextColumnFilter\",\r\n      // enable floating filters by default\r\n      floatingFilter: true,\r\n    },\r\n    columnDefs: [\r\n      {\r\n        headerName: \"Invoice No\",\r\n        field: \"invoiceNo\",\r\n        maxWidth: 140,\r\n      },\r\n      {\r\n        headerName: \"Invoice Date\",\r\n        field: \"invoiceDate\",\r\n        filter: \"agDateColumnFilter\",\r\n        type: [\"dateColumn\"],\r\n        maxWidth: 200,\r\n      },\r\n      {\r\n        headerName: \"Due Date\",\r\n        field: \"dueDate\",\r\n        filter: \"agDateColumnFilter\",\r\n        type: [\"dateColumn\"],\r\n        maxWidth: 200,\r\n      },\r\n      {\r\n        headerName: \"Currency\",\r\n        field: \"currency\",\r\n        maxWidth: 130,\r\n      },\r\n      {\r\n        headerName: \"Invoice To\",\r\n        field: \"invoiceTo\",\r\n      },\r\n      {\r\n        headerName: \"Action\",\r\n        field: \"invoiceNo\",\r\n        cellRenderer: ActionRenderer,\r\n        colId: \"params\",\r\n        maxWidth: 270,\r\n        filter: false,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const columnTypes = {\r\n    dateColumn: {\r\n      // specify we want to use the date filter\r\n      filter: \"agDateColumnFilter\",\r\n      // add extra parameters for the date filter\r\n      filterParams: {\r\n        // provide comparator function\r\n        comparator: (filterLocalDateAtMidnight, cellValue) => {\r\n          // In the example application, dates are stored as dd/mm/yyyy\r\n          // We create a Date object for comparison against the filter date\r\n          const dateParts = cellValue.split(\"-\");\r\n          const year = Number(dateParts[0]);\r\n          const month = Number(dateParts[1]) - 1;\r\n          const day = Number(dateParts[2]);\r\n          const cellDate = new Date(year, month, day);\r\n          // Now that both parameters are Date objects, we can compare\r\n          if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\r\n            return 0;\r\n          }\r\n          if (cellDate < filterLocalDateAtMidnight) {\r\n            return -1;\r\n          }\r\n          if (cellDate > filterLocalDateAtMidnight) {\r\n            return 1;\r\n          }\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row mt-3\">\r\n        <div className=\"col-md-12\">\r\n          <h5>Invoices</h5>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-md-12\">\r\n          <div\r\n            style={{ height: \"600px\", width: \"100%\" }}\r\n            className=\"ag-theme-alpine\"\r\n          >\r\n            <AgGridReact\r\n              rowSelection=\"single\"\r\n              context={state.context}\r\n              columnDefs={state.columnDefs}\r\n              rowData={rowData}\r\n              defaultColDef={state.defaultColDef}\r\n              frameworkComponents={state.frameworkComponents}\r\n              columnTypes={columnTypes}\r\n            ></AgGridReact>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InvoiceList;\r\n"],"names":["params","onClick","context","componentParent","className","title","history","useNavigate","useState","localStorage","getItem","JSON","parse","rowData","setRowData","useEffect","setItem","stringify","state","props","action","replace","uuid","data","item","find","s","i","pdfExport","window","confirm","filter","defaultColDef","flex","sortable","resizable","floatingFilter","columnDefs","headerName","field","maxWidth","type","cellRenderer","ActionRenderer","colId","columnTypes","dateColumn","filterParams","comparator","filterLocalDateAtMidnight","cellValue","dateParts","split","year","Number","month","day","cellDate","Date","getTime","style","height","width","AgGridReact","rowSelection","frameworkComponents"],"sourceRoot":""}